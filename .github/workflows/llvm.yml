name: C/C++ CI

on:
  issues:
    types: [opened,reopened]

env:
  #CC: clang-10 -w
  #CXX: clang-10 -w -stdlib=libc++ -lc++abi -lc++ -lc++abi  -lstdc++
  #run: sudo rm $(which cmake);sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"&&sudo apt install -y libc++-10-dev libc++abi-10-dev cmake
  TARGET_SHA: ${{ github.event.issue.title }}
jobs:

  build-clang12:
    runs-on: ubuntu-latest
    env:
      CC: clang-12 -w
      CXX: clang++-12 -w
    steps:
    - name: clone
      run: |
       if [[ "$TARGET_SHA" =~ [^a-zA-Z0-9] ]]; then exit 1; fi
       echo $TARGET_SHA
       git clone https://github.com/llvm/llvm-project.git
       cd llvm-project
       mkdir build
       git checkout $TARGET_SHA
    - name: install
      run: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 12
    - name: configure, make
      run: |
        cmake -DLLVM_ENABLE_PROJECTS="clang;compiler-rt;lld" -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=X86 -G "Unix Makefiles" ../llvm
        make -j2
      working-directory: llvm-project/build
    - name: Virtual install
      run: |
        mkdir -p /tmp/llvm-project/virtualroot
        pushd llvm-project/build
        cmake -DCMAKE_INSTALL_PREFIX=/tmp/llvm-project/virtualroot/ -P cmake_install.cmake
        cd /tmp/llvm-project
        tar -czf /tmp/virtualroot.tar.gz virtualroot
    - uses: actions/upload-artifact@v2
      with:
        name: clang12-virtualroot.tar.gz
        path: /tmp/virtualroot.tar.gz
    - name: test
      run: make check-clang -j2 ||true
      working-directory: llvm-project/build

  build-clang12-static:
    runs-on: ubuntu-latest
    env:
      CC: clang-12 -w -static-libgcc
      CXX: clang++-12 -w -static-libstdc++ -static-libgcc
    steps:
    - name: clone
      run: |
       if [[ "$TARGET_SHA" =~ [^a-zA-Z0-9] ]]; then exit 1; fi
       echo $TARGET_SHA
       git clone https://github.com/llvm/llvm-project.git
       cd llvm-project
       mkdir build
       git checkout $TARGET_SHA
    - name: install
      run: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 12
    - name: configure, make
      run: |
        cmake -DLLVM_ENABLE_PROJECTS="clang;compiler-rt" -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=X86 -G "Unix Makefiles" ../llvm
        make -j2
      working-directory: llvm-project/build
    - name: Virtual install
      run: |
        mkdir -p /tmp/llvm-project/virtualroot
        pushd llvm-project/build
        cmake -DCMAKE_INSTALL_PREFIX=/tmp/llvm-project/virtualroot/ -P cmake_install.cmake
        cd /tmp/llvm-project
        tar -czf /tmp/virtualroot.tar.gz virtualroot
    - uses: actions/upload-artifact@v2
      with:
        name: clang12-static-virtualroot.tar.gz
        path: /tmp/virtualroot.tar.gz
    - name: test
      run: make check-clang -j2 ||true
      working-directory: llvm-project/build

  release:
    runs-on: ubuntu-18.04
    needs: [build-clang12,build-clang12-static]
    if: always()
    steps:
      - name: Init
        run: |
          if [[ "$TARGET_SHA" =~ [^a-zA-Z0-9] ]]; then exit 1; fi
          echo $TARGET_SHA
      - name: Download-artifact
        uses: actions/download-artifact@v2
        with: # it seems download-artifact does not honor working-directory
          path: ./
      - name: Get short SHA
        id: commit
        run: echo "::set-output name=commit::$(echo ${TARGET_SHA} | cut -c1-8)"
      - name: ls
        run: ls -l clang12-virtualroot.tar.gz
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{  steps.commit.outputs.commit }}
          release_name: Release ${{ github.event.issue.title }}
          draft: false
          prerelease: false

      - name: Upload to release
        if: always()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: clang12-virtualroot.tar.gz/virtualroot.tar.gz
          asset_name: clang12-virtualroot.tar.gz
          asset_content_type: application/gzip
      - name: Upload to release
        if: always()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: clang12-static-virtualroot.tar.gz/virtualroot.tar.gz
          asset_name: clang12-static-virtualroot.tar.gz
          asset_content_type: application/gzip
 
      - name: Close Issue
        uses: peter-evans/close-issue@v1
        if: ${{ always() }}
        #with:
        #  comment: Closed by workflow
